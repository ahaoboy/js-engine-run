name: Setup js-engine-run
description: Download, install, and setup js-engine-run to your path.
author: ahaoboy
branding:
  icon: play-circle
  color: white
inputs:
  test:
    description: "The test dir"
    required: true
  output:
    description: "the output test"
    required: false
  engines:
    description: "the engines"
    required: false
runs:
  using: "composite"
  steps:
    - uses: oven-sh/setup-bun@v2
      with:
        bun-version: latest
    - uses: actions/setup-node@v4
      with:
        node-version: latest
    - uses: denoland/setup-deno@v2
      with:
        deno-version: latest
    - uses: pnpm/action-setup@v4
      with:
        version: 10
    - uses: actions/setup-java@v4
      with:
        distribution: "oracle"
        java-version: "25"

    - name: install dep
      shell: bash
      if: ${{ runner.os == 'Linux' }}
      run: |
        sudo apt install -y libcurl4-openssl-dev libssl-dev zlib1g-dev

    - name: install easy-install
      shell: bash
      run: |
        curl -fsSL https://raw.githubusercontent.com/easy-install/easy-install/main/install.sh | bash
    - name: install from urls
      shell: bash
      run: |
        which ei
        urls=(
          https://github.com/ahaoboy/easy-install/raw/refs/heads/main/dist-manifest/boa.json
          https://github.com/ahaoboy/easy-install/raw/refs/heads/main/dist-manifest/llrt.json
          https://github.com/ahaoboy/easy-install/raw/refs/heads/main/dist-manifest/hermes.json
          https://github.com/ahaoboy/easy-install/raw/refs/heads/main/dist-manifest/xst.json
          https://github.com/ahaoboy/txiki.js-build
          https://github.com/ahaoboy/spidermonkey-build
          https://github.com/ahaoboy/v8-build
          https://github.com/ahaoboy/jerryscript-build
          https://github.com/ahaoboy/mujs-build
          https://github.com/ahaoboy/mujs-one
          https://github.com/ahaoboy/mujs-pgo-build
          https://github.com/ahaoboy/rquickjs-cli
          https://github.com/ahaoboy/ChakraCore-build
          https://github.com/ahaoboy/jsc-build
          https://github.com/ahaoboy/goja-build
          https://github.com/ahaoboy/kiesel-build
          https://github.com/ahaoboy/mozjs-cli
          https://github.com/ahaoboy/jint-cli
          https://github.com/aalykiot/dune
          https://github.com/ahaoboy/duktape-build
          https://github.com/ahaoboy/njs-build
          https://github.com/ahaoboy/spiderfire-build
          https://github.com/ahaoboy/lo-build
          https://github.com/trynova/nova
          https://nightly.link/andrewmd5/hako-cli/workflows/build/llvm
          https://github.com/ahaoboy/bare-build
          https://github.com/ahaoboy/rqjs-pgo-build
          https://github.com/ahaoboy/rhino-cli
        )

        for url in "${urls[@]}"; do
          echo "install: $url"
          ei "$url"
        done

    - name: install ladybird
      shell: bash
      if: ${{ runner.os != 'Windows' }}
      run: |
        ei https://github.com/ahaoboy/ladybird-js-build
        mv ~/.ei/js ~/.ei/ladybird

    - name: install by bun
      shell: bash
      run: |
        bun i -g @engine262/engine262
        bun i -g quickjs-emscripten-cli

    - name: install unix
      shell: bash
      if: ${{ runner.os != 'Windows' }}
      run: |
        ei https://github.com/ahaoboy/primjs-build
        mv ~/.ei/qjs ~/.ei/primjs

        ei https://github.com/ringo/ringojs/releases/download/v4.0.0/ringojs-4.0.0.tar.gz

    - name: install qjs-ng
      shell: bash
      run: |
        ei https://github.com/quickjs-ng/quickjs
        mv ~/.ei/qjs ~/.ei/qjs-ng
        mv ~/.ei/qjsc ~/.ei/qjsc-ng
    - name: install qjs
      shell: bash
      run: |
        ei https://github.com/ahaoboy/quickjs-build
    - name: install graaljs
      shell: bash
      run: |
        ei https://github.com/ahaoboy/easy-install/raw/refs/heads/main/dist-manifest/graaljs.json
        mv ~/.ei/graaljs/bin/js ~/.ei/graaljs/bin/graaljs

    - name: Set JavaScriptCore environment variable only on macOS
      shell: bash
      if: ${{ runner.os == 'macOS' }}
      run: |
        JSC_DIR="$(dirname "$(which jsc)")"
        echo $JSC_DIR
        echo "DYLD_FRAMEWORK_PATH=$JSC_DIR" >> "$GITHUB_ENV"
        echo "DYLD_LIBRARY_PATH=$JSC_DIR" >> "$GITHUB_ENV"
    # - name: strip
    #   shell: bash
    #   run: |
    #     bash ${{ github.action_path }}/strip.sh ${{ github.action_path }}/info.json
    - name: run
      if: ${{ runner.os != 'Windows' }}
      shell: bash
      run: |
        # bun ${{ github.action_path }}/src/action.ts > ${{ runner.os }}.json
        node ${{ github.action_path }}/bundle/action.js > ${{ runner.os }}.json
    - name: run
      if: ${{ runner.os == 'Windows' }}
      shell: bash
      run: |
        action_path=$(echo "${{ github.action_path }}" | sed 's#\\#/#g' | sed 's#^\([A-Za-z]\):#/\L\1#')
        # bun "$action_path/src/action.ts" > "${{ runner.os }}.json"
        node "$action_path/bundle/action.js" > "${{ runner.os }}.json"
